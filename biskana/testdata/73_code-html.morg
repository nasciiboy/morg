..title    >  Recursive Regexp Raptor
..subtitle >  La Guia Para Construir Un Motor Regexp
..author   >  nasciiboy
..language >  es
..date     >  2016
..tags     >  regex regexp c-prog algorithm
..licence  >  GNU FDL v1.3
..style    >  worg-data/worg.css
..options  >  pygments

..src > sh
  echo hello morg

..src > sh
  echo hello morg

  whoamy

..src > c
  #include <stdio.h>              /* incluye información acerca de la biblioteca estándar */

  main(){                         /* define una función llamada main
                                     que no recibe valores de argumentos */
                                  /* las proposiciones de main están encerradas entre llaves */
    printf( "hola, mundo\n" );    /* main llama a la función printf de biblioteca estándar
                                     para escribir esta secuencia de caracteres;
                                     \n representa el carácter nueva línea */
  }
< src..

  ..src > go
    package main

    import "fmt"

    func main() {
      fmt.Println("Hello, 世界")
    }
  < src..

    ..src target=our-copy-tree > lisp
      (defun our-copy-tree (tr)
        (if (atom tr)
            tr
          (cons (our-copy-tree (car tr))
                (our-copy-tree (cdr tr)))))
    < src..

..src > morg
  @c(inline-command C)

  ..C > block-command C
< src..
